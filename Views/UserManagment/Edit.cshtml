

@using new_project.Data;
@inject ApplicationDbContext db
@model new_project.Models.User

@{
    ViewData["Title"] = "EditUser";
}

<h1>EditUser</h1>

<h4>User</h4>
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="row">
    <div class="col-md-4">
        <form asp-action="EditUser">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="role" class="control-label"></label>
                @Html.DropDownListFor(m => m.role.Id, new SelectList(db.Roles.ToList(),"Id","Name"), "Select Role")
                <span asp-validation-for="role" class="text-danger"></span>
            </div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                @Html.LabelFor(m => m.UserName)
                @Html.EditorFor(m => m.UserName, new { htmlAttributes = new { @class = "form-control" } })

                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

                <div class="form-group">
                <label asp-for="userProject" class="control-label"></label>
               @Html.DropDownListFor(model=>model.userProject.projectId,new SelectList(db.projects.ToList(),"projectId","name"),"Select one")
                <span asp-validation-for="userProject" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
}
<div>
    <a asp-action="Index">Back to List</a>
</div>

